{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\first-react-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextArea from './components/TextArea';\nimport ModeAlert from './components/ModeAlert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.body.style.backgroundColor = '#0c4c50';\n    } else {\n      setMode('light');\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.body.style.backgroundColor = 'white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text Utility\",\n      about: \"About us\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ModeAlert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextArea, {\n        heading: \"Enter the text to analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","TextArea","ModeAlert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","toggleMode","document","body","style","backgroundColor","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["E:/reactjs/first-react-project/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextArea from './components/TextArea';\nimport ModeAlert from './components/ModeAlert';\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type)=>{\n    setAlert({\n      message: message,\n      type: type\n    })\n\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.body.style.backgroundColor = '#0c4c50'\n    }else{\n      setMode('light')\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.body.style.backgroundColor = 'white'\n    }\n  }\n  return (\n   <>\n    <Navbar title = \"Text Utility\" about = \"About us\" mode = {mode} toggleMode = {toggleMode}/>\n    <ModeAlert alert = {alert}/>\n    <div className=\"container my-3\">\n        <TextArea heading = \"Enter the text to analyze below\"mode = {mode}/>\n    </div>\n    {/* <div className=\"container\">\n        <About/>\n    </div> */}\n    \n    \n    \n   </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMc,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAG;IACjCH,QAAQ,CAAC;MACPE,OAAO,EAAEA,OAAO;MAChBC,IAAI,EAAEA;IACR,CAAC,CAAC;EAEJ,CAAC;EACD,MAAMC,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGP,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfG,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;MAClDI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;IACjD,CAAC,MAAI;MACHV,OAAO,CAAC,OAAO,CAAC;MAChBG,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;MACnDI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAC/C;EACF,CAAC;EACD,oBACChB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACCjB,OAAA,CAACJ,MAAM;MAACsB,KAAK,EAAG,cAAc;MAACC,KAAK,EAAG,UAAU;MAACd,IAAI,EAAIA,IAAK;MAACO,UAAU,EAAIA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC3FvB,OAAA,CAACF,SAAS;MAACS,KAAK,EAAIA;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC5BvB,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAC3BjB,OAAA,CAACH,QAAQ;QAAC4B,OAAO,EAAG,iCAAiC;QAAApB,IAAI,EAAIA;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClE;EAAA,gBAOJ;AAEN;AAACnB,EAAA,CApCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}